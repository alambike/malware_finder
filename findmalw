#!/usr/bin/env perl

use Cwd qw(abs_path);

sub BEGIN {
    my @partes = split /\//, abs_path($0);
    pop(@partes);
    push @INC, join('/', @partes);
}

use strict;
use Getopt::Std;

my $CONF = {};

load_cli_args();

my $PARSER_CLASS = uc($CONF->{lang}).'MalwareFinder';
my $parser = $PARSER_CLASS->new();

my @files = get_files($CONF->{dir});

my @infected; 

foreach my $f ( @files){
    if(my $detail = $parser->check_file($f)){
        push @infected, $detail;
        print "File $f infected ($detail)\n";
    }
}



#################################################################

sub load_cli_args{
    my $conf = shift;

    # Mergeamos CONF cas opcions pasadas desde a linea de comandos
    my $opts = {};
    getopts("Fd:l:", $opts);

    $CONF->{dir} = $opts->{d} || '.' ;
    $CONF->{lang} = $opts->{l} || 'php';
    $CONF->{fix} = $opts->{F} || undef;
}


sub get_files {

    my $dir = $_[0];

    opendir(my $d, $dir) || die("Error opening $dir: $!");

    my $str = join('|',$PARSER_CLASS->extensions() );
    my $pattern = qr/\.($str)$/i;

    my @res;

    while(my $f = readdir($d)){

        next if($f =~/^\.+$/);

        push @res, get_files("$dir/$f") if(-d "$dir/$f");

        push @res, "$dir/$f" if($f =~ $pattern);
    }

    @res;
}



package PHPMalwareFinder;

my @PATTERNS = [

    {
        regexp => qr/\<\?php.+\>\?\<\?/,
        msg => 'More than 1 php opening tag in same line',
    },
    {
        regexp => qr/function_exists.+pack\(/,
        msg => 'Packed function',
    }

];


sub extensions {
    qw(php html htm);
}

sub new {
    return bless({
        debug => 1,    
    });
}

sub check_file{
    my $self = $_[0];

    my $file = $_[1];

    print "Checking $file\n" if($self->{debug});

    open(my $fh, $file);

    while(my $line = <$fh>){
        
        foreach my $p (@PATTERNS){
            return $p->{msg} if($line =~ $p->{regexp});
        }
    }
}


