package Malware::Finder::Config;

use strict;
use Getopt::Std;
$Getopt::Std::STANDARD_HELP_VERSION = 1;

my $DEFAULT_THRESHOLD = 11;
my $DEFAULT_WORKERS = 2;

my $DEFAULT_F_INFECTED = sub {
    
    print 'File ['.$_[0].'] possibly infected ('.$_[1].")\n", `ls -l '$_[0]'`, "\n";
};

sub new{

    my ($class, %args) = @_;

    return bless{
        dir => $args{dir},
        file => $args{file},
        lang => $args{lang} || 'php',
        fix => $args{fix},
        test => $args{test},
        debug => $args{debug},
        threshold_level => $args{threshold_level} || $DEFAULT_THRESHOLD,
        workers => $args{workers} || $DEFAULT_WORKERS,
        f_infected => $args{f_infected} || $DEFAULT_F_INFECTED,

    };
}


sub load_from_cli{
    my $self = shift;

    # Mergeamos CONF cas opcions pasadas desde a linea de comandos
    my $opts = {};
    
    getopts("FTDt:d:l:f:w:", $opts) or &main::HELP_MESSAGE();

    $self->{dir} = $opts->{d};
    $self->{file} = $opts->{f};
    &main::HELP_MESSAGE() unless($self->{dir} || $self->{file});
    $self->{lang} = $opts->{l} || 'php';
    $self->{fix} = $opts->{F} || undef;
    $self->{test} = $opts->{T} || undef;
    $self->{debug} = $opts->{D} || undef;
    $self->{threshold_level} = $opts->{t} || $DEFAULT_THRESHOLD;
    $self->{workers} = $opts->{w} || $DEFAULT_WORKERS;

    $self;
}

sub main::HELP_MESSAGE{
    
    my $msg = <<EOF  

    Usage: $0 -d <dir> -f <file> (-t <threshold_level) (-w <num workers>) (-l <lang>) (-F) (-T) (-D) 
    
    -d <directory> : Directory to scan or
    -f <file> : File to scan (NEEDED)
    -t <threshold_level>: Minimum puntuaction to mark a file as infected (default: $DEFAULT_THRESHOLD)
    -w <num workers>: Number of threads to use to analyze files simultaneously
    -F: Try to fix infection and clean file (backup created in same path <file>.fmwbkp)
    -T: Run in test mode
    -D: Run in debug mode

EOF
;
    print $msg;
    exit(0);

}

sub main::VERSION_MESSAGE {
    my $msg = <<EOF
    Version: $Malware::Finder::VERSION
EOF
;
    print $msg;
}


1;
