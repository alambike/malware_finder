package ThreadsPool;

use strict;
use threads;
use threads::shared;
use Thread::Queue;


use 5.8.0;


my $MAX_THREADS = 4;
my $TERM :shared = 0;
my $IDLE_QUEUE = Thread::Queue->new();
my $DEBUG = undef;

$SIG{'INT'} = $SIG{'TERM'} =
    sub {

        print(">>> Terminating <<<\n") if($DEBUG);
        $TERM = 1;
        # Add -1 to head of idle queue to signal termination
        $IDLE_QUEUE->insert(0, -1);
};

my %WORK_QUEUES = ();


sub start{
    my ($class, $code,%opts) = @_;

    unless(%WORK_QUEUES){

        my $n_threads = $opts{threads} || $MAX_THREADS;

        for(1..$n_threads){

            my $w_queue = Thread::Queue->new();

            my $th = threads->create(
                '_worker', 
                $code,
                $w_queue,
                $opts{caller},
            );

            $WORK_QUEUES{$th->tid()} = $w_queue;
        }
    }
    else{
        die("pool already started, must be finished first");
    }

}


sub sendWork {
    my ($class, @args) = @_;
    my $tid = $IDLE_QUEUE->dequeue();
   
    # en caso de querer sair (recibimos -1 pola queue)
    if($tid == -1){
        &finish;
        exit(0);
    }

    $WORK_QUEUES{$tid}->enqueue([@args]);
}


sub finish{
    
    $WORK_QUEUES{$_}->enqueue(-1) foreach (keys(%WORK_QUEUES));
    
    # Wait for all the threads to finish
    $_->join() foreach threads->list();
    
    %WORK_QUEUES = ();
}



sub _worker {

    my ($code,$work_q, $obj_caller) = @_;

    my $tid = threads->tid();

    my $stats = 0;

    while(!$TERM){
        # Indicate that were are ready to do work
        printf("Idle     -> %2d\n", $tid) if($DEBUG);
        $IDLE_QUEUE->enqueue($tid);
 
        # Wait for work from the queue
        my $work = $work_q->dequeue();

        if(ref $work eq 'ARRAY'){

            my @args = @$work;
            unshift(@args, $obj_caller) if($obj_caller);

            &$code(@args);

        }else{

            last if($work == -1);
        }

        $stats++;

    };

    printf("Finished -> %2d\n", $tid) if($DEBUG);
    print("[$tid] Files checked : $stats\n") if($DEBUG);

}

1;
